version: '3.7'

services:
  telegram_bot:
    build:
      context: .
    restart: unless-stopped
    command: python main.py
    expose:
      - "443"
    ports:
       - "443:443"

  minio:
    image: quay.io/minio/minio:RELEASE.2024-12-18T13-15-44Z
    command: server --console-address ":${MINIO_PORT}" /data
    env_file:
      - .env
    expose:
      - "${MINIO_API_PORT}"
      - "${MINIO_PORT}"
    ports:
       - "${MINIO_API_PORT}:${MINIO_API_PORT}"
       - "${MINIO_PORT}:${MINIO_PORT}"
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - audio-files:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

  rabbitmq:
    image: rabbitmq:3.13.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  db:
    image: postgres:13.2
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}"
    command: [ "postgres", "-c", "log_statement=all", "-c", "log_destination=stderr" ]
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "postgres" ]
      interval: 1s
      retries: 20
    env_file:
      - .env

  alembic:
    build:
      context: .
    entrypoint: [ "alembic" ]
    command: [ "upgrade", "head" ]
    depends_on:
      db:
        condition: service_healthy

  consumer:
    build:
      context: .
    command: uvicorn consumer.web_app:create_app --factory --host 0.0.0.0 --port 8010 --workers=1
    ports:
      - "8090:8010"
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - .:/code

  redis:
    image: redis:6.2.4
    ports:
      - "6379:6379"

volumes:
  audio-files:
